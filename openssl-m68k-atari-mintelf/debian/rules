#!/usr/bin/make -f
# Sample debian/rules that uses debhelper.
# GNU copyright 1997 to 1999 by Joey Hess.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_BUILD_GNU_TYPE      := $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
DEB_HOST_GNU_TYPE       := $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)

tarball := $(wildcard openssl-*.tar.gz)
patch   := $(wildcard openssl-*.patch.bz2)

srcdir  := $(shell echo $(tarball) | sed -e 's/\.tar\.gz//')

# FIXME: one-char vars are evil, even more than emacs.
D := $(CURDIR)/debian/openssl-m68k-atari-mintelf

.PHONY: unpack
unpack: unpack-stamp
unpack-stamp:
	dh_testdir

	tar zxf $(tarball)

	touch unpack-stamp

.PHONY: patch
patch: patch-stamp
patch-stamp: unpack-stamp
	dh_testdir

ifneq (, $(patch))
	cd $(srcdir) && \
		bzcat ../$(patch) | patch -p1
endif

	cd $(srcdir) && \
		sed -i "s/: -[LI][^ ']*/:/g" Configurations/unix-Makefile.tmpl

	touch patch-stamp

.PHONY: configure-m68000
configure-m68000: configure-m68000-stamp
configure-m68000-stamp: patch-stamp
	dh_testdir

	mkdir build-m68000

	cd build-m68000 && \
		../$(srcdir)/Configure --cross-compile-prefix=m68k-atari-mintelf- --prefix=/usr/m68k-atari-mintelf --openssldir=/usr/lib/ssl zlib mint

	touch configure-m68000-stamp

.PHONY: configure-m68020-60
configure-m68020-60: configure-m68020-60-stamp
configure-m68020-60-stamp: patch-stamp
	dh_testdir

	mkdir build-m68020-60

	cd build-m68020-60 && \
		../$(srcdir)/Configure --cross-compile-prefix=m68k-atari-mintelf- --prefix=/usr/m68k-atari-mintelf --openssldir=/usr/lib/ssl zlib mint020

	touch configure-m68020-60-stamp

.PHONY: configure-m5475
configure-m5475: configure-m5475-stamp
configure-m5475-stamp: patch-stamp
	dh_testdir

	mkdir build-m5475

	cd build-m5475 && \
		../$(srcdir)/Configure --cross-compile-prefix=m68k-atari-mintelf- --prefix=/usr/m68k-atari-mintelf --openssldir=/usr/lib/ssl zlib mintv4e

	touch configure-m5475-stamp

.PHONY: build-m68000
build-m68000: build-m68000-stamp
build-m68000-stamp: configure-m68000-stamp
	dh_testdir

	cd build-m68000 && \
		$(MAKE) build_libs

	touch build-m68000-stamp

.PHONY: build-m68020-60
build-m68020-60: build-m68020-60-stamp
build-m68020-60-stamp: configure-m68020-60-stamp
	dh_testdir

	cd build-m68020-60 && \
		$(MAKE) build_libs

	touch build-m68020-60-stamp

.PHONY: build-m5475
build-m5475: build-m5475-stamp
build-m5475-stamp: configure-m5475-stamp
	dh_testdir

	cd build-m5475 && \
		$(MAKE) build_libs

	touch build-m5475-stamp

.PHONY: install-m68000
install-m68000: install-m68000-stamp
install-m68000-stamp: build-m68000-stamp
	dh_testdir
	dh_testroot
	dh_prep
	dh_installdirs

	cd build-m68000 && \
		$(MAKE) install_dev DESTDIR=$(D)

	touch install-m68000-stamp

.PHONY: install-m68020-60
install-m68020-60: install-m68020-60-stamp
install-m68020-60-stamp: install-m68000-stamp build-m68020-60-stamp
	dh_testdir
	dh_testroot

	cd build-m68020-60 && \
		$(MAKE) install_dev DESTDIR=$$PWD/binary-package

	mkdir -p $(D)/usr/m68k-atari-mintelf/lib/m68020-60
	cp -Rv build-m68020-60/binary-package/usr/m68k-atari-mintelf/lib/m68020-60 $(D)/usr/m68k-atari-mintelf/lib

	touch install-m68020-60-stamp

.PHONY: install-m5475
install-m5475: build-m5475 install-m5475-stamp
install-m5475-stamp: install-m68000-stamp build-m5475-stamp
	dh_testdir
	dh_testroot

	cd build-m5475 && \
		$(MAKE) install_dev DESTDIR=$$PWD/binary-package

	mkdir -p $(D)/usr/m68k-atari-mintelf/lib/m5475
	cp -Rv build-m5475/binary-package/usr/m68k-atari-mintelf/lib/m5475 $(D)/usr/m68k-atari-mintelf/lib

	touch install-m5475-stamp

.PHONY: clean
clean:
	dh_testdir
	dh_testroot
	rm -rf build-* $(srcdir)
	rm -f build-*-stamp configure-*-stamp install-*-stamp patch-stamp unpack-stamp
	rm -f config.cache

	dh_clean

.PHONY: build
build: build-m68000-stamp build-m68020-60-stamp build-m5475-stamp

.PHONY: install
install: install-m68000-stamp install-m68020-60-stamp install-m5475-stamp
	# Cleanup
	find  $(D)/usr/m68k-atari-mintelf/lib -name '*.a' -print -exec m68k-atari-mintelf-strip -S -x '{}' ';'

# Build architecture-independent files here.
.PHONY: binary-indep
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
.PHONY: binary-arch
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installdocs
#	dh_installexamples
#	dh_installmenu
#	dh_installlogrotate
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
#	dh_installinit
#	dh_installcron
	dh_installman
#	dh_installinfo
	dh_installchangelogs
	dh_link
#	dh_strip
#	dh_compress `cd $(D) && find usr/m68k-atari-mintelf/share/man -type f`
	dh_fixperms
#	dh_makeshlibs
	dh_installdeb
#	dh_perl
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

.PHONY: binary
binary: binary-indep binary-arch
